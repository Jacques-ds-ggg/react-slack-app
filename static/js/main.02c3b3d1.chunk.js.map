{"version":3,"sources":["components/ChatInput.js","components/ChatMessage.js","firebase.js","data/SideBarData.js","components/Chat.js","components/Login.js","components/Header.js","components/Sidebar.js","App.js","reportWebVitals.js","index.js"],"names":["ChatInput","SendMessage","useState","input","setInput","Container","InputContainer","onChange","e","target","value","type","placeholder","Buttons","ShortcutButton","BoldButton","ItalicButton","StriketButton","MoreButton","FormatButton","AtButton","EmojyButton","AttachButton","Sendbutton","onClick","preventDefault","styled","div","button","Send","SendIcon","ChatMessage","text","name","image","timestamp","UserAvatar","src","MessageContent","Name","Date","toDate","toUTCString","Text","span","db","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","firestore","auth","provider","GoogleAuthProvider","SidebarItemsData","icon","Chat","User","channelid","useParams","channel","setChannel","messages","setMessages","useEffect","collection","doc","onSnapshot","snapshot","data","orderBy","docs","map","console","log","HeaderBox","DescriptionContainer","ChannelName","ChannelInfo","DetailsContainer","MessageContainer","length","index","userName","userImage","payload","Timestamp","now","photo","add","Info","InfoIcon","Login","props","Contend","SlackImg","SignInButton","signInWithPopup","then","result","newUser","user","displayName","photoURL","localStorage","setItem","JSON","stringify","setUser","catch","error","alert","message","img","Header","signOut","Main","SearchContainer","Search","UserContainer","UserImage","Sidebar","history","useHistory","Containers","WorkspaceContainer","NewMessage","MainChannels","item","MainChannelItems","ChannelsContainer","NewChannelsContainer","promptName","prompt","ChannelsList","rooms","Channel","id","push","App","setRooms","parse","getItem","className","removeItem","path","SelectChannel","Styled","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.02c3b3d1.chunk.js","sourcesContent":["import React, {useState}from 'react'\r\nimport styled from 'styled-components'\r\nimport SendIcon from '@material-ui/icons/Send';\r\nimport AttachFileIcon from '@material-ui/icons/AttachFile';\r\nimport TagFacesIcon from '@material-ui/icons/TagFaces';\r\nimport AlternateEmailIcon from '@material-ui/icons/AlternateEmail';\r\nimport FormatItalicIcon from '@material-ui/icons/FormatItalic';\r\nimport FormatBoldIcon from '@material-ui/icons/FormatBold';\r\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz';\r\nimport FlashOnIcon from '@material-ui/icons/FlashOn';\r\nimport StrikethroughSIcon from '@material-ui/icons/StrikethroughS';\r\nimport FormatStrikethroughIcon from '@material-ui/icons/FormatStrikethrough';\r\n\r\n\r\nfunction ChatInput({ SendMessage }) {\r\n\r\n    const [ input, setInput] = useState(\"\");\r\n\r\n    const send = (e) => {\r\n        // Prevent page from refreshing\r\n        e.preventDefault();\r\n        if(!input) return;\r\n        SendMessage(input)\r\n        setInput('');\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n            <InputContainer>\r\n                <form>\r\n                    <input\r\n                        onChange={(e)=>setInput(e.target.value)}\r\n                        type=\"Text\"\r\n                        value={input}\r\n                        placeholder=\"Message here...\"\r\n                    />\r\n                </form>\r\n                <Buttons>\r\n                    <ShortcutButton>\r\n                        <FlashOnIcon/>\r\n                    </ShortcutButton>\r\n                    <BoldButton>\r\n                        <FormatBoldIcon/>\r\n                    </BoldButton>\r\n                    <ItalicButton>\r\n                        <FormatItalicIcon/>\r\n                    </ItalicButton>\r\n                    <StriketButton>\r\n                        <StrikethroughSIcon/>\r\n                    </StriketButton>\r\n                    <MoreButton>\r\n                        <MoreHorizIcon/>\r\n                    </MoreButton>\r\n                    <FormatButton>\r\n                        <FormatStrikethroughIcon/>\r\n                    </FormatButton>\r\n                    <AtButton>\r\n                        <AlternateEmailIcon />\r\n                    </AtButton>\r\n                    <EmojyButton>\r\n                        <TagFacesIcon/>\r\n                    </EmojyButton>\r\n                    <AttachButton>\r\n                        <AttachFileIcon />\r\n                    </AttachButton>\r\n                    <Sendbutton\r\n                        // Allow it to be send on hittin the enter key\r\n                        type='submt'\r\n                        onClick={send}>\r\n                        <Send />\r\n                    </Sendbutton>\r\n                </Buttons>\r\n            </InputContainer>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default ChatInput\r\n\r\nconst ShortcutButton = styled.div`\r\n    color: #525453;\r\n    // Set color of the send icon\r\n    background: white;\r\n    border-radius: 100%;\r\n    // Background effect form Circle around icon\r\n    width: 32px;\r\n    // Set effect width\r\n    height: 32px;\r\n    // Set effect height;\r\n    display: flex;\r\n    // Align center\r\n    align-items: center;\r\n    // Allign Vertically\r\n    justify-content: center;\r\n    // Align horizontally\r\n    cursor: pointer;\r\n    font-size: 24px;\r\n    // margin-bottom: 5px;\r\n\r\n    :Hover {\r\n        background: #ccc3e6;\r\n    }\r\n`\r\nconst BoldButton = styled.div`\r\n    color: #525453;\r\n    // Set color of the send icon\r\n    background: white;\r\n    border-radius: 100%;\r\n    // Background effect form Circle around icon\r\n    width: 32px;\r\n    // Set effect width\r\n    height: 32px;\r\n    // Set effect height;\r\n    display: flex;\r\n    // Align center\r\n    align-items: center;\r\n    // Allign Vertically\r\n    justify-content: center;\r\n    // Align horizontally\r\n    cursor: pointer;\r\n    font-size: 24px;\r\n    // margin-bottom: 5px;\r\n\r\n    :Hover {\r\n        background: #ccc3e6;\r\n    }\r\n`\r\nconst ItalicButton=  styled.div`\r\n    color: #525453;\r\n    // Set color of the send icon\r\n    background: white;\r\n    border-radius: 100%;\r\n    // Background effect form Circle around icon\r\n    width: 32px;\r\n    // Set effect width\r\n    height: 32px;\r\n    // Set effect height;\r\n    display: flex;\r\n    // Align center\r\n    align-items: center;\r\n    // Allign Vertically\r\n    justify-content: center;\r\n    // Align horizontally\r\n    cursor: pointer;\r\n    font-size: 24px;\r\n    // margin-bottom: 5px;\r\n\r\n    :Hover {\r\n        background: #ccc3e6;\r\n    }\r\n  `  \r\nconst MoreButton = styled.div`\r\n    color: #525453;\r\n    // Set color of the send icon\r\n    background: white;\r\n    border-radius: 100%;\r\n    // Background effect form Circle around icon\r\n    width: 32px;\r\n    // Set effect width\r\n    height: 32px;\r\n    // Set effect height;\r\n    display: flex;\r\n    // Align center\r\n    align-items: center;\r\n    // Allign Vertically\r\n    justify-content: center;\r\n    // Align horizontally\r\n    cursor: pointer;\r\n    font-size: 24px;\r\n    // margin-bottom: 5px;\r\n\r\n    :Hover {\r\n        background: #ccc3e6;\r\n    }\r\n    `\r\nconst FormatButton = styled.div`\r\n    color: #525453;\r\n    // Set color of the send icon\r\n    background: white;\r\n    border-radius: 100%;\r\n    // Background effect form Circle around icon\r\n    width: 32px;\r\n    // Set effect width\r\n    height: 32px;\r\n    // Set effect height;\r\n    display: flex;\r\n    // Align center\r\n    align-items: center;\r\n    // Allign Vertically\r\n    justify-content: center;\r\n    // Align horizontally\r\n    cursor: pointer;\r\n    font-size: 24px;\r\n    // margin-bottom: 5px;\r\n\r\n    :Hover {\r\n        background: #ccc3e6;\r\n    }\r\n    `\r\nconst StriketButton = styled.div`\r\n    color: #525453;\r\n    // Set color of the send icon\r\n    background: white;\r\n    border-radius: 100%;\r\n    // Background effect form Circle around icon\r\n    width: 32px;\r\n    // Set effect width\r\n    height: 32px;\r\n    // Set effect height;\r\n    display: flex;\r\n    // Align center\r\n    align-items: center;\r\n    // Allign Vertically\r\n    justify-content: center;\r\n    // Align horizontally\r\n    cursor: pointer;\r\n    font-size: 24px;\r\n    // margin-bottom: 5px;\r\n\r\n    :Hover {\r\n        background: #ccc3e6;\r\n    }\r\n`\r\n\r\nconst Container = styled.div`\r\n    // background: orange;\r\n    padding-left: 20px;\r\n    padding-right: 20px;\r\n    padding-bottom: 20px;\r\n`\r\nconst InputContainer = styled.div`\r\n    border: 1px solid #8D8D8E;\r\n    border-radius: 4px;\r\n\r\n    form {\r\n        display: flex;\r\n        height: 42px;\r\n        align-items: center;\r\n        padding-left: 10px;\r\n        input {\r\n            flex 1;\r\n            // Make the input the main focus vs send button\r\n            border: none;\r\n            // Remove the border form the input type section\r\n            font-size: 13px;\r\n        }\r\n        input:focus {\r\n            outine: none;\r\n            // Remove the blue border from the text input.\r\n        }\r\n    }\r\n`\r\nconst Sendbutton = styled.button`\r\n    background: #7b03fc;\r\n    border-radius: 2px;\r\n    width: 32px;\r\n    height: 32px;\r\n    display: flex;\r\n    align-items: center;\r\n    // Allign Vertically\r\n    justify-content: center;\r\n    // Align horizontally\r\n    margin-right: 5px;\r\n    cursor: pointer;\r\n    border: none;\r\n\r\n    .MuiSvgIcon-root {\r\n    // Target Icon class discovered by the inspector\r\n    // function on the browser.\r\n        width: 18px;\r\n        // Size of the icon itself\r\n    }\r\n\r\n    :Hover {\r\n        background: #7b03fc;\r\n    }\r\n`\r\nconst Form = styled.div``\r\nconst Send = styled(SendIcon)`\r\n    color: #D9D9D9;\r\n    // Set color of the send icon\r\n`\r\nconst EmojyButton = styled.div`\r\n    color: #525453;\r\n    // Set color of the send icon\r\n    background: white;\r\n    border-radius: 100%;\r\n    // Background effect form Circle around icon\r\n    width: 32px;\r\n    // Set effect width\r\n    height: 32px;\r\n    // Set effect height;\r\n    display: flex;\r\n    // Align center\r\n    align-items: center;\r\n    // Allign Vertically\r\n    justify-content: center;\r\n    // Align horizontally\r\n    cursor: pointer;\r\n\r\n    :Hover {\r\n        background: #ccc3e6;\r\n    }\r\n`\r\nconst AttachButton = styled.div`\r\n    color: #525453;\r\n    // Set color of the send icon\r\n    background: white;\r\n    border-radius: 100%;\r\n    // Background effect form Circle around icon\r\n    width: 32px;\r\n    // Set effect width\r\n    height: 32px;\r\n    // Set effect height;\r\n    display: flex;\r\n    // Align center\r\n    align-items: center;\r\n    // Allign Vertically\r\n    justify-content: center;\r\n    // Align horizontally\r\n    cursor: pointer;\r\n    margin-right: 7px;\r\n\r\n    :Hover {\r\n        background: #ccc3e6;\r\n    }\r\n`\r\nconst Buttons = styled.div`\r\n    display: flex;\r\n    justify-content: flex-end;\r\n    \r\n`\r\n\r\nconst AtButton = styled.div`\r\n    color: #525453;\r\n    // Set color of the send icon\r\n    background: white;\r\n    border-radius: 100%;\r\n    // Background effect form Circle around icon\r\n    width: 32px;\r\n    // Set effect width\r\n    height: 32px;\r\n    // Set effect height;\r\n    display: flex;\r\n    // Align center\r\n    align-items: center;\r\n    // Allign Vertically\r\n    justify-content: center;\r\n    // Align horizontally\r\n    cursor: pointer;\r\n    font-size: 24px;\r\n    // margin-bottom: 5px;\r\n\r\n    :Hover {\r\n        background: #ccc3e6;\r\n    }`","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport ArrowRightAltIcon from '@material-ui/icons/ArrowRightAlt';\r\n\r\nfunction ChatMessage({ text, name, image, timestamp }) {\r\n    return (\r\n        <Container>\r\n            <UserAvatar>\r\n                <img src={image} />\r\n            </UserAvatar>\r\n            <MessageContent>\r\n                <Name>\r\n                    {name}\r\n                    <span>{new Date(timestamp.toDate()).toUTCString()}</span>\r\n                </Name>\r\n                <Text>\r\n                    <ArrowRightAltIcon/>     \r\n                    {text}\r\n                </Text>\r\n            </MessageContent>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default ChatMessage\r\n\r\nconst Container = styled.div`\r\n    // background: #d7c2ed;\r\n    padding: 8px 20px;\r\n    // padding shortcut: 8px - vertical, 20p - horizontal\r\n    display: flex;\r\n    // To set the items side by side.\r\n    align-items: center;\r\n    // Align image to center\r\n    border-bottom: 1px solid #dbdbdb;\r\n    // Add a light border to separate the chat\r\n\r\n    :Hover {\r\n        background: #dbdbdb;\r\n    }\r\n`\r\nconst UserAvatar = styled.div`\r\n    width: 36px;\r\n    height: 36px;\r\n    border-radius: 2px;\r\n    overflow: hidden;\r\n    margin-right: 8px;\r\n\r\n    img {\r\n        width: 100%;\r\n        // Resize the image to fit with box\r\n    }\r\n`\r\nconst MessageContent = styled.div`\r\n    display: flex;\r\n    // Set text items top to bottom.\r\n    flex-direction: column;\r\n\r\n`\r\nconst Name = styled.span`\r\n    font-weight: 900;\r\n    font-size: 15px;\r\n    color: #5d00c2;\r\n    // Make the entire first part smaller.\r\n    line-height: 1.4;\r\n    // Set the line-Height slightly bigger\r\n    \r\n    \r\n    span {\r\n        margin-left: 8px;\r\n        // Slight Space between items\r\n        font-weight: 400;\r\n        // Set second part to different weight\r\n        color: rgb(97, 96, 97);\r\n        // Set the color to a lighter color.\r\n        font-size: 13px;\r\n        // Resize the second item.\r\n    }`\r\nconst Text = styled.span`\r\n    display: flex;\r\n    // Align items vertically.\r\n\r\n`\r\n","import firebase from 'firebase'\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyAirI3nZUUhYmf29T-0RyaXPSqhsrc5oBk\",\r\n    authDomain: \"slack-clone-chanllenge-day3-cp.firebaseapp.com\",\r\n    projectId: \"slack-clone-chanllenge-day3-cp\",\r\n    storageBucket: \"slack-clone-chanllenge-day3-cp.appspot.com\",\r\n    messagingSenderId: \"1015051167696\",\r\n    appId: \"1:1015051167696:web:229e13a79de9bce5febbd5\"\r\n  };\r\n\r\n  const firebaseapp = firebase.initializeApp(firebaseConfig);\r\n  const db = firebaseapp.firestore();\r\n  const auth = firebase.auth();\r\n  const provider = new firebase.auth.GoogleAuthProvider();\r\n\r\n  export {auth, provider};\r\n  export default db;","import MessageIcon from '@material-ui/icons/Message';\r\nimport InboxIcon from '@material-ui/icons/Inbox';\r\nimport DraftsIcon from '@material-ui/icons/Drafts';\r\nimport BookmarkBorderIcon from '@material-ui/icons/BookmarkBorder';\r\nimport PeopleIcon from '@material-ui/icons/People';\r\nimport AppsIcon from '@material-ui/icons/Apps';\r\n\r\n\r\nexport const SidebarItemsData =[\r\n{\r\n    icon: <MessageIcon />,\r\n    text: \"Thread\"\r\n},\r\n{\r\n    icon: <InboxIcon />,\r\n    text: \"All DM's\"\r\n},\r\n{\r\n    icon: <DraftsIcon />,\r\n    text: \"Mentions & Reactions\"\r\n},\r\n{\r\n    icon: <BookmarkBorderIcon />,\r\n    text: \"Saved Items\"\r\n},\r\n{\r\n    icon: <PeopleIcon />,\r\n    text: \"People & Groups\"\r\n},\r\n{\r\n    icon: <AppsIcon />,\r\n    text: \"More\"\r\n}]","import React, { useEffect, useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport InfoIcon from '@material-ui/icons/Info';\r\nimport ChatInput from './ChatInput'\r\nimport ChatMessage from './ChatMessage';\r\nimport db from '../firebase';\r\nimport { useParams } from 'react-router-dom';\r\nimport { SidebarItemsData } from '../data/SideBarData';\r\nimport firebase from 'firebase';\r\n\r\nfunction Chat({ User }) {\r\n\r\n    let { channelid } = useParams();\r\n    const [ channel, setChannel ] = useState();\r\n    const [ messages, setMessages ] = useState([]);\r\n\r\n    const getMessages = () => {\r\n        db.collection('rooms')\r\n        .doc(channelid)\r\n        .collection('Messages')\r\n        .orderBy('timestamp', 'asc')\r\n        .onSnapshot((snapshot)=>{\r\n            let messages = snapshot.docs.map((doc)=>doc.data());\r\n            console.log(messages);\r\n            setMessages(messages);\r\n        })\r\n    }\r\n\r\n    const SendMessage = (text) => {\r\n        if(channelid){\r\n            let payload = {\r\n                text: text,\r\n                timestamp: firebase.firestore.Timestamp.now(),\r\n                userName: User.name,\r\n                userImage: User.photo\r\n            }\r\n            db.collection('rooms').doc(channelid).collection('Messages').add(payload);\r\n\r\n            // console.log(payload);\r\n        }\r\n    }\r\n\r\n    const getChannel = () => {\r\n        db.collection('rooms')\r\n        .doc(channelid)\r\n        .onSnapshot((snapshot)=> {\r\n            setChannel(snapshot.data());\r\n            // console.log(snapshot.data());\r\n        })\r\n    }\r\n\r\n    useEffect(()=>{\r\n        // Obtain the channel on clicking on the actual website\r\n        getChannel();\r\n        // Obatain the massage assosited with the selected channel\r\n        getMessages();\r\n    }, [channelid])\r\n\r\n    return (\r\n        <Container>\r\n            <HeaderBox>\r\n                <DescriptionContainer>\r\n                    <ChannelName>\r\n                        # {channel && channel.Name}\r\n                    </ChannelName>\r\n                    <ChannelInfo>\r\n                        Company-wide anouncements and work-based matters\r\n                    </ChannelInfo>\r\n                </DescriptionContainer> \r\n                <DetailsContainer>\r\n                    Details\r\n                    <Info />\r\n                </DetailsContainer>\r\n            </HeaderBox>\r\n            <MessageContainer>\r\n                {\r\n                    // If message have a lenth - there is messages\r\n                    messages.length > 0 &&\r\n                    // Loop through every single message\r\n                    messages.map((data, index)=>(\r\n                        <ChatMessage\r\n                            text={data.text}\r\n                            name={data.userName}\r\n                            image={data.userImage}\r\n                            timestamp={data.timestamp} />\r\n                    ))\r\n                }\r\n            </MessageContainer>\r\n            <ChatInput SendMessage={SendMessage}/>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Chat\r\n\r\nconst HeaderBox = styled.div`\r\n    padding-left: 20px;\r\n    // Move text to the right 20px\r\n    padding-right: 20px;\r\n    display: flex;\r\n    // To be able to move items to center\r\n    align-items: center; \r\n    // Align items inside the header box to center\r\n    border-bottom: 1px solid grey;\r\n    // Add small border to bottom of header row\r\n    justify-content: space-between;\r\n    // Push items to the 2 ends\r\n    background: white;\r\n    // Color of backround of first row\r\n`\r\nconst Container = styled.div`\r\n    display: grid;\r\n    min-height: 0;\r\n    grid-template-rows: 64px auto min-content;\r\n    // Define 3 rows - \r\n    // 1. Height of the Header - 64px height\r\n    // 2. Height of message - auto - expand according to size of message\r\n    // 3. Height minimum of message box at bottom - min-content\r\n`\r\nconst DescriptionContainer = styled.div``\r\nconst DetailsContainer = styled.div`\r\n    display: flex;\r\n    // color: grey;\r\n    // color: #7b03fc;\r\n    // Change color of text\r\n    align-items: center;\r\n    font-size: 15px;\r\n    color: #5d00c2;\r\n`\r\nconst Info = styled(InfoIcon)`\r\n    margin-left: 10px;\r\n`\r\nconst ChannelName = styled.div`\r\n    font-weight: bold;\r\n    // color: black;\r\n    color: #7b03fc;\r\n    // color: #5d00c2;\r\n`\r\nconst ChannelInfo = styled.div`\r\n    margin-top: 8px;\r\n    font-weight: 400;\r\n    font-size: 12px;\r\n    color: black;\r\n    // color: #5d00c2;\r\n    color: #7b03fc;\r\n`\r\nconst MessageContainer = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    overflow-y: scroll;\r\n    // color: #7b03fc;\r\n`","import React from 'react';\r\nimport styled from \"styled-components\";\r\nimport { auth, provider } from '../firebase';\r\n\r\nfunction Login(props) {\r\n    const SignIn = () => {\r\n        auth.signInWithPopup(provider)\r\n        .then((result)=>{\r\n            const newUser = {\r\n                name : result.user.displayName,\r\n                photo: result.user.photoURL,\r\n            }\r\n            localStorage.setItem('user', JSON.stringify(newUser));\r\n            props.setUser(newUser);\r\n        })\r\n        .catch((error)=>(\r\n            alert(error.message)\r\n        ))\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n            <Contend>\r\n                <SlackImg src=\"http://assets.stickpng.com/images/5cb480cd5f1b6d3fbadece79.png\"/>\r\n                <h1>Sign in to Slack</h1>\r\n                <SignInButton onClick={()=>SignIn()}>\r\n                    Sign In with Google\r\n                </SignInButton>\r\n            </Contend>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Login\r\n\r\nconst Container = styled.div`\r\n    width: 100%;\r\n    height: 100vh;\r\n    background: #f8f8f8;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    background-image: url(\"https://wallpapercave.com/wp/wp3917267.png\");\r\n    background-position: center;\r\n    background-size: cover;\r\n`\r\n\r\nconst Contend = styled.div`\r\n    background: white;\r\n    background-image: url(\"https://wallpapercave.com/wp/wp3917269.png\");\r\n    background-position: center;\r\n    padding: 100px;\r\n    border-radius: 5px;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n    box-shadow: 0 1px 3px rgb( 0 0 0 / 12%), 0 1px 2px rgb( 0 0 0 / 24%);\r\n`\r\nconst BImage = styled.img``\r\nconst SlackImg = styled.img`\r\n    height: 100px;\r\n`\r\n\r\nconst SignInButton = styled.button`\r\n    margin-top: 50px;\r\n    background-color: #0a8d48;\r\n    color: white;\r\n    border: none;\r\n    height: 40px;\r\n    border-radius: 4px;\r\n    cursor: pointer;\r\n    font-size: 15px;\r\n`\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport AccessTimeIcon from '@material-ui/icons/AccessTime';\r\nimport HelpOutlineIcon from '@material-ui/icons/HelpOutline';\r\n\r\nfunction Header({ user, signOut }) {\r\n    return (\r\n        <Container>\r\n            <Main>\r\n                <AccessTimeIcon />\r\n                <SearchContainer>\r\n                    <Search>\r\n                        <input type=\"text\" placeholder=\"Search...\" />\r\n                    </Search>\r\n                </SearchContainer>\r\n                <HelpOutlineIcon />\r\n            </Main>\r\n            <UserContainer>\r\n                <Name>\r\n                    {user.name}\r\n                </Name>\r\n                <UserImage onClick={signOut}>\r\n                    <img src={user.photo ? user.photo : \"https://i.imgur.com/6VBx3io.png\"} />\r\n                </UserImage>\r\n            </UserContainer>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Header\r\n\r\nconst Container = styled.div`\r\n    // background: #350d36;\r\n    background: #7b03fc;\r\n    color: white;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    position: relative;\r\n    z-index: 10;\r\n    box-shadow: 0 1px 0 0 rgb(255 255 255 / 10%);\r\n\r\n`\r\nconst Main = styled.div`\r\n    display: flex;\r\n    margin-right: 16px;\r\n    margin-left: 16px;\r\n    color: #a1a1a1;\r\n`\r\nconst SearchContainer = styled.div`\r\n    min-width: 400px;\r\n    margin-left: 16px;\r\n    margin-right: 16px;\r\n`\r\nconst Search = styled.div`\r\n    box-shadow: inset 0 0 0 1px rgb{104 74 104};\r\n    border: 1px solid grey;\r\n    width: 100%;\r\n    border-radius: 6px;\r\n    display: flex;\r\n    align-items: center;\r\n    color: rgb(0 0 0);\r\n\r\n    input {\r\n        background-color: transparent;\r\n        border: none;\r\n        padding-left: 8px;\r\n        padding-right: 8px;\r\n        color: white;\r\n        padding-top: 4px;\r\n        padding-bottom: 4px;\r\n    }\r\n    input:focus {\r\n        outline: none;\r\n    }\r\n`\r\nconst UserContainer = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    padding-right: 16px;\r\n    position: absolute;\r\n    right: 0;\r\n    color: white;\r\n`\r\nconst Name = styled.div`\r\n    padding-right: 16px;\r\n`\r\nconst UserImage = styled.div`\r\n    width: 28px;\r\n    height: 28px;\r\n    border: 2px solid #a1a1a1;\r\n    order-radius: 3px;\r\n    cursor: pointer;\r\n\r\n    img {\r\n        width: 100%;\r\n    }\r\n`","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline';\r\nimport { SidebarItemsData } from '../data/SideBarData';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport db from '../firebase';\r\nimport { useHistory } from 'react-router-dom'\r\n// import {ChannelBarItemsData} from '../data/ChannelBarData';\r\n\r\nfunction Sidebar(props) {\r\n    const history = useHistory();\r\n\r\n    const goToChannel = (id) => {\r\n        if(id){\r\n            history.push(`/room/${id}`)\r\n            console.log(id);\r\n        }\r\n    }\r\n\r\n    const addChannel = () => {\r\n        const promptName = prompt(\"Enter Chanel Name\");\r\n        if(promptName){\r\n            db.collection('rooms').add({\r\n                Name : promptName\r\n            })\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Containers>\r\n            <WorkspaceContainer>\r\n                <Name>\r\n                    CleverProgrammer\r\n                </Name>\r\n                <NewMessage>\r\n                    <AddCircleOutlineIcon />\r\n\r\n                </NewMessage>\r\n            </WorkspaceContainer>\r\n            <MainChannels>\r\n                {\r\n                    SidebarItemsData.map(item => (\r\n                        <MainChannelItems>\r\n                            {item.icon}\r\n                            {item.text}\r\n                        </MainChannelItems>\r\n                    ))\r\n                }\r\n            </MainChannels>\r\n            <ChannelsContainer>\r\n                <NewChannelsContainer>\r\n                    <div>\r\n                        Channels\r\n                    </div>\r\n                    <AddIcon onClick={addChannel} />\r\n                </NewChannelsContainer>\r\n                <ChannelsList>\r\n                    {\r\n                        props.rooms.map(item => (\r\n                            <Channel onClick={()=>goToChannel(item.id)}>\r\n                                # { item.name }\r\n                            </Channel>\r\n                        ))\r\n                    }\r\n                </ChannelsList>\r\n            </ChannelsContainer>\r\n        </Containers>\r\n    )\r\n}\r\n\r\nexport default Sidebar\r\n\r\nconst Containers = styled.div`\r\n    // background: #3F0E40;\r\n    background: #b3b3b3;\r\n`\r\nconst WorkspaceContainer = styled.div`\r\n    // color: white;\r\n    color: #7b03fc;\r\n    height: 64px;\r\n    display: flex;\r\n    align-items: center;\r\n    padding-left: 19px;\r\n    justify-content: space-between;\r\n    border-bottom: 1px solid #532753;\r\n    font-weight: bold;\r\n`\r\n\r\nconst Name = styled.div``\r\n\r\nconst NewMessage = styled.div`\r\n    width: 36px;\r\n    height: 36px;\r\n    background: #ad89d9;\r\n    color: #5d00c2;\r\n    fill: #3E0E40;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    border-radius: 50%;\r\n    margin-right: 20px;\r\n    cursor: pointer;\r\n\r\n`\r\n\r\nconst MainChannels = styled.div`\r\n    padding-top: 20px;\r\n`\r\nconst MainChannelItems = styled.div`\r\n    // color: rgb(188 171 188);\r\n    color: #7b03fc;\r\n    display: grid;\r\n    grid-template-columns: 15% auto;\r\n    height: 28px;\r\n    align-items: center;\r\n    padding-left: 19px;\r\n    cursor: pointer;\r\n    :hover {\r\n        background: #350D36;\r\n    }\r\n`\r\nconst ChannelsContainer = styled.div`\r\n    // color: rgb(188 171 188);\r\n    color: #7b03fc;\r\n    margin-top: 10px;\r\n    \r\n`\r\nconst NewChannelsContainer = styled.div`\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    height: 28px;\r\n    padding-left: 19px;\r\n    padding-right: 12px;\r\n`\r\nconst ChannelsList = styled.div`\r\n`\r\nconst Channel = styled.div`\r\n    height 28px;\r\n    dispaly: flex;\r\n    align-items: center;\r\n    padding-left: 19px;\r\n    cursor: pointer;\r\n    :hover {\r\n        background: #350D36;\r\n    }\r\n`","import './App.css';\nimport { BrowserRouter as Router, Route, Switch} from 'react-router-dom'\nimport Chat from './components/Chat'\nimport { useEffect, useState } from 'react'\nimport Login from './components/Login'\nimport Styled from 'styled-components'\nimport Header from './components/Header'\nimport Sidebar from './components/Sidebar'\nimport db from './firebase'\nimport { auth, provider } from './firebase';\n\n\nfunction App(props) {\n\n  const [rooms, setRooms] = useState([]);\n  const [User, setUser] = useState(JSON.parse(localStorage.getItem('user')));\n\n\n  const getChannels = () => {\n    db.collection('rooms').onSnapshot((snapshot) => {\n      setRooms(snapshot.docs.map((doc) => {\n        return { id: doc.id, name: doc.data().Name }\n      }))\n    })\n  }\n  const signOut = () => {\n    auth.signOut().then(()=> {\n      localStorage.removeItem('user');\n      setUser(null);\n    })\n\n  }\n\n  useEffect(() => {\n    getChannels();\n  }, [])\n\n  // console.log(\"User in App State\", User);\n\n  \n\n  return (\n    <div className=\"App\">\n      <Router>\n        {\n          !User ?\n          <Login setUser={setUser}/>\n        :\n        <Container>\n          <Header signOut={signOut} user={User}/>\n          <Main>\n            <Sidebar rooms={rooms} />\n            <Switch>\n              <Route path=\"/room/:channelid\">\n                <Chat User={User}/>\n              </Route>\n              <Route path=\"/\">\n                <SelectChannel>\n                  Select A Channel\n                </SelectChannel>\n              </Route>\n            </Switch>\n            </Main>  \n        </Container>\n      }\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n\nconst SelectChannel = Styled.div`\n  background-image: url(\"https://www.theladders.com/wp-content/uploads/Ladders_SlackPTSD-1000x563.jpg\");\n  background-size: cover;\n  background-position: center;\n  display: flex;\n  padding: 100px;\n  font-weight: 900;\n  font-size: 50px;\n  color: #7b03fc;\n  flex-direction: column;\n  align-items: center;\n`\nconst Container = Styled.div`\n  width: 100%;\n  height: 100vh;\n  display: grid;\n  grid-template-rows: 38px minmax(0,1fr);\n  background: white;\n  // background: #C0C0C0;\n`;\nconst Main = Styled.div`\n  display: grid;\n  grid-template-columns: 260px auto;\n\n`;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}